<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <groupId>it.eng.tz.projects.templating.session</groupId>
	<artifactId>angular7_base_project</artifactId>
	<version>0.0.1-SNAPSHOPT</version>
	<packaging>jar</packaging>
	<name>Frontend</name>
	<description>
		Lato frontend basato su angular 2.7
	</description>
	<properties>
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	</properties>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>dist</directory>
							<includes>
								<include>*</include>								
								<include>**/*</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.7.6</version>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v10.15.3</nodeVersion>
							<npmVersion>6.4.1</npmVersion>
							<arguments>run build</arguments>
							<npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>

						<configuration>						 
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm run build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
							<npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
						</configuration>
					</execution>
					 
				</executions>
			</plugin>
		</plugins>
	</build>
   <profiles>
      <profile>
         <id>sviluppo</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
      </profile>
      <profile>
         <id>collaudo_interno</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>com.github.eirslett</groupId>
                  <artifactId>frontend-maven-plugin</artifactId>
                  <version>1.9.1</version>
                  <executions>
                     <execution>
                        <id>install node and npm</id>
                        <goals>
                           <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                           <nodeVersion>v13.10.1</nodeVersion>
							<npmVersion>6.14.3</npmVersion>
                           <arguments>run build</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm install</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                           <arguments>install</arguments>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm run build</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <configuration>                          
                           <arguments>run-script collaudo_interno</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>Echo Version</id>
							<phase>verify</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo message="Start Version PRINT***************"/>
									<tstamp>
										<format property="TODAY" pattern="dd/MM/yyyy HH:mm:ss:sss zzz" locale="it_IT"/>
									</tstamp>
									<property name="newLine" value="${new.line}"/>
									<property environment="my_env" />
									<echo file="dist/template/index.html" append="true">
<![CDATA[<!--]]>
	release-name=collaudo_interno
	release-datetime=${TODAY}
	release-username=${user.name}
	release-os-name=${os.name}
	release-java-version=${java.version}
<![CDATA[-->]]>
	
									</echo>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
            </plugins>
            <pluginManagement>
				<plugins>
					<!--
						Plugin per far coprire il lifecycle di maven in Eclipse quando si usa il plugin ant
						Senza eclipse non si ha nessun impatto
					 -->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>org.apache.maven.plugins</groupId>
											<artifactId>maven-antrun-plugin</artifactId>
											<versionRange>[1.8,)</versionRange>
											<goals>
												<goal>run</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<execute />
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
         </build>
      </profile>
     <profile>
         <id>collaudo_cliente</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>com.github.eirslett</groupId>
                  <artifactId>frontend-maven-plugin</artifactId>
                  <version>1.9.1</version>
                  <executions>
                     <execution>
                        <id>install node and npm</id>
                        <goals>
                           <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                           <nodeVersion>v13.10.1</nodeVersion>
							<npmVersion>6.14.3</npmVersion>
                           <arguments>run build</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm install</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                           <arguments>install</arguments>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm run build</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <configuration>                          
                           <arguments>run-script collaudo_cliente</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>Echo Version</id>
							<phase>verify</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo message="Start Version PRINT***************"/>
									<tstamp>
										<format property="TODAY" pattern="dd/MM/yyyy HH:mm:ss:sss zzz" locale="it_IT"/>
									</tstamp>
									<property name="newLine" value="${new.line}"/>
									<property environment="my_env" />
									<echo file="dist/template/index.html" append="true">
<![CDATA[<!--]]>
	release-name=collaudo_cliente
	release-datetime=${TODAY}
	release-username=${user.name}
	release-os-name=${os.name}
	release-java-version=${java.version}
<![CDATA[-->]]>
	
									</echo>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
            </plugins>
            <pluginManagement>
				<plugins>
					<!--
						Plugin per far coprire il lifecycle di maven in Eclipse quando si usa il plugin ant
						Senza eclipse non si ha nessun impatto
					 -->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>org.apache.maven.plugins</groupId>
											<artifactId>maven-antrun-plugin</artifactId>
											<versionRange>[1.8,)</versionRange>
											<goals>
												<goal>run</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<execute />
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
         </build>
      </profile>
      <profile>
         <id>produzione</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>com.github.eirslett</groupId>
                  <artifactId>frontend-maven-plugin</artifactId>
                  <version>1.9.1</version>
                  <executions>
                     <execution>
                        <id>install node and npm</id>
                        <goals>
                           <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                           <nodeVersion>v13.10.1</nodeVersion>
							<npmVersion>6.14.3</npmVersion>
                           <arguments>run build</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm install</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                           <arguments>install</arguments>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm run build</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <configuration>                          
                           <arguments>run-script produzione</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>Echo Version</id>
							<phase>verify</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo message="Start Version PRINT***************"/>
									<tstamp>
										<format property="TODAY" pattern="dd/MM/yyyy HH:mm:ss:sss zzz" locale="it_IT"/>
									</tstamp>
									<property name="newLine" value="${new.line}"/>
									<property environment="my_env" />
									<echo file="dist/template/index.html" append="true">
<![CDATA[<!--]]>
	release-name=produzione
	release-datetime=${TODAY}
	release-username=${user.name}
	release-os-name=${os.name}
	release-java-version=${java.version}
<![CDATA[-->]]>
	
									</echo>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
            </plugins>
            <pluginManagement>
				<plugins>
					<!--
						Plugin per far coprire il lifecycle di maven in Eclipse quando si usa il plugin ant
						Senza eclipse non si ha nessun impatto
					 -->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>org.apache.maven.plugins</groupId>
											<artifactId>maven-antrun-plugin</artifactId>
											<versionRange>[1.8,)</versionRange>
											<goals>
												<goal>run</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<execute />
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
         </build>
      </profile>
	  <!--profili per build di pareri-->
	  <profile>
         <id>collaudo_interno_pareri</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>com.github.eirslett</groupId>
                  <artifactId>frontend-maven-plugin</artifactId>
                  <version>1.9.1</version>
                  <executions>
                     <execution>
                        <id>install node and npm</id>
                        <goals>
                           <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                           <nodeVersion>v13.10.1</nodeVersion>
							<npmVersion>6.14.3</npmVersion>
                           <arguments>run build</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm install</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                           <arguments>install</arguments>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm run build</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <configuration>                          
                           <arguments>run-script collaudo_interno_pareri</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>Echo Version</id>
							<phase>verify</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo message="Start Version PRINT***************"/>
									<tstamp>
										<format property="TODAY" pattern="dd/MM/yyyy HH:mm:ss:sss zzz" locale="it_IT"/>
									</tstamp>
									<property name="newLine" value="${new.line}"/>
									<property environment="my_env" />
									<echo file="dist/template/index.html" append="true">
<![CDATA[<!--]]>
	release-name=collaudo_interno_pareri
	release-datetime=${TODAY}
	release-username=${user.name}
	release-os-name=${os.name}
	release-java-version=${java.version}
<![CDATA[-->]]>
	
									</echo>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
            </plugins>
            <pluginManagement>
				<plugins>
					<!--
						Plugin per far coprire il lifecycle di maven in Eclipse quando si usa il plugin ant
						Senza eclipse non si ha nessun impatto
					 -->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>org.apache.maven.plugins</groupId>
											<artifactId>maven-antrun-plugin</artifactId>
											<versionRange>[1.8,)</versionRange>
											<goals>
												<goal>run</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<execute />
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
         </build>
      </profile>
     <profile>
         <id>collaudo_cliente_pareri</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>com.github.eirslett</groupId>
                  <artifactId>frontend-maven-plugin</artifactId>
                  <version>1.9.1</version>
                  <executions>
                     <execution>
                        <id>install node and npm</id>
                        <goals>
                           <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                           <nodeVersion>v13.10.1</nodeVersion>
							<npmVersion>6.14.3</npmVersion>
                           <arguments>run build</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm install</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                           <arguments>install</arguments>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm run build</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <configuration>                          
                           <arguments>run-script collaudo_cliente_pareri</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>Echo Version</id>
							<phase>verify</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo message="Start Version PRINT***************"/>
									<tstamp>
										<format property="TODAY" pattern="dd/MM/yyyy HH:mm:ss:sss zzz" locale="it_IT"/>
									</tstamp>
									<property name="newLine" value="${new.line}"/>
									<property environment="my_env" />
									<echo file="dist/template/index.html" append="true">
<![CDATA[<!--]]>
	release-name=collaudo_cliente_pareri
	release-datetime=${TODAY}
	release-username=${user.name}
	release-os-name=${os.name}
	release-java-version=${java.version}
<![CDATA[-->]]>
	
									</echo>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
            </plugins>
            <pluginManagement>
				<plugins>
					<!--
						Plugin per far coprire il lifecycle di maven in Eclipse quando si usa il plugin ant
						Senza eclipse non si ha nessun impatto
					 -->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>org.apache.maven.plugins</groupId>
											<artifactId>maven-antrun-plugin</artifactId>
											<versionRange>[1.8,)</versionRange>
											<goals>
												<goal>run</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<execute />
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
         </build>
      </profile>
      <profile>
         <id>produzione_pareri</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>com.github.eirslett</groupId>
                  <artifactId>frontend-maven-plugin</artifactId>
                  <version>1.9.1</version>
                  <executions>
                     <execution>
                        <id>install node and npm</id>
                        <goals>
                           <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                           <nodeVersion>v13.10.1</nodeVersion>
							<npmVersion>6.14.3</npmVersion>
                           <arguments>run build</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm install</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                           <arguments>install</arguments>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm run build</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <configuration>                          
                           <arguments>run-script produzione_pareri</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>Echo Version</id>
							<phase>verify</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo message="Start Version PRINT***************"/>
									<tstamp>
										<format property="TODAY" pattern="dd/MM/yyyy HH:mm:ss:sss zzz" locale="it_IT"/>
									</tstamp>
									<property name="newLine" value="${new.line}"/>
									<property environment="my_env" />
									<echo file="dist/template/index.html" append="true">
<![CDATA[<!--]]>
	release-name=produzione_pareri
	release-datetime=${TODAY}
	release-username=${user.name}
	release-os-name=${os.name}
	release-java-version=${java.version}
<![CDATA[-->]]>
	
									</echo>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
            </plugins>
            <pluginManagement>
				<plugins>
					<!--
						Plugin per far coprire il lifecycle di maven in Eclipse quando si usa il plugin ant
						Senza eclipse non si ha nessun impatto
					 -->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>org.apache.maven.plugins</groupId>
											<artifactId>maven-antrun-plugin</artifactId>
											<versionRange>[1.8,)</versionRange>
											<goals>
												<goal>run</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<execute />
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
         </build>
      </profile>
	<!--profili per build di putt-->
	  <profile>
         <id>collaudo_interno_putt</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>com.github.eirslett</groupId>
                  <artifactId>frontend-maven-plugin</artifactId>
                  <version>1.9.1</version>
                  <executions>
                     <execution>
                        <id>install node and npm</id>
                        <goals>
                           <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                           <nodeVersion>v13.10.1</nodeVersion>
							<npmVersion>6.14.3</npmVersion>
                           <arguments>run build</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm install</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                           <arguments>install</arguments>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm run build</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <configuration>                          
                           <arguments>run-script collaudo_interno_putt</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>Echo Version</id>
							<phase>verify</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo message="Start Version PRINT***************"/>
									<tstamp>
										<format property="TODAY" pattern="dd/MM/yyyy HH:mm:ss:sss zzz" locale="it_IT"/>
									</tstamp>
									<property name="newLine" value="${new.line}"/>
									<property environment="my_env" />
									<echo file="dist/template/index.html" append="true">
<![CDATA[<!--]]>
	release-name=collaudo_interno_putt
	release-datetime=${TODAY}
	release-username=${user.name}
	release-os-name=${os.name}
	release-java-version=${java.version}
<![CDATA[-->]]>
	
									</echo>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
            </plugins>
            <pluginManagement>
				<plugins>
					<!--
						Plugin per far coprire il lifecycle di maven in Eclipse quando si usa il plugin ant
						Senza eclipse non si ha nessun impatto
					 -->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>org.apache.maven.plugins</groupId>
											<artifactId>maven-antrun-plugin</artifactId>
											<versionRange>[1.8,)</versionRange>
											<goals>
												<goal>run</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<execute />
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
         </build>
      </profile>
     <profile>
         <id>collaudo_cliente_putt</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>com.github.eirslett</groupId>
                  <artifactId>frontend-maven-plugin</artifactId>
                  <version>1.9.1</version>
                  <executions>
                     <execution>
                        <id>install node and npm</id>
                        <goals>
                           <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                           <nodeVersion>v13.10.1</nodeVersion>
							<npmVersion>6.14.3</npmVersion>
                           <arguments>run build</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm install</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                           <arguments>install</arguments>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm run build</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <configuration>                          
                           <arguments>run-script collaudo_cliente_putt</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>Echo Version</id>
							<phase>verify</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo message="Start Version PRINT***************"/>
									<tstamp>
										<format property="TODAY" pattern="dd/MM/yyyy HH:mm:ss:sss zzz" locale="it_IT"/>
									</tstamp>
									<property name="newLine" value="${new.line}"/>
									<property environment="my_env" />
									<echo file="dist/template/index.html" append="true">
<![CDATA[<!--]]>
	release-name=collaudo_cliente_putt
	release-datetime=${TODAY}
	release-username=${user.name}
	release-os-name=${os.name}
	release-java-version=${java.version}
<![CDATA[-->]]>
	
									</echo>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
            </plugins>
            <pluginManagement>
				<plugins>
					<!--
						Plugin per far coprire il lifecycle di maven in Eclipse quando si usa il plugin ant
						Senza eclipse non si ha nessun impatto
					 -->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>org.apache.maven.plugins</groupId>
											<artifactId>maven-antrun-plugin</artifactId>
											<versionRange>[1.8,)</versionRange>
											<goals>
												<goal>run</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<execute />
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
         </build>
      </profile>
      <profile>
         <id>produzione_putt</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>com.github.eirslett</groupId>
                  <artifactId>frontend-maven-plugin</artifactId>
                  <version>1.9.1</version>
                  <executions>
                     <execution>
                        <id>install node and npm</id>
                        <goals>
                           <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                           <nodeVersion>v13.10.1</nodeVersion>
							<npmVersion>6.14.3</npmVersion>
                           <arguments>run build</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm install</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                           <arguments>install</arguments>
                        </configuration>
                     </execution>
                     <execution>
                        <id>npm run build</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <configuration>                          
                           <arguments>run-script produzione_putt</arguments>
                           <npmInheritsProxyConfigFromMaven>true</npmInheritsProxyConfigFromMaven>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>Echo Version</id>
							<phase>verify</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo message="Start Version PRINT***************"/>
									<tstamp>
										<format property="TODAY" pattern="dd/MM/yyyy HH:mm:ss:sss zzz" locale="it_IT"/>
									</tstamp>
									<property name="newLine" value="${new.line}"/>
									<property environment="my_env" />
									<echo file="dist/template/index.html" append="true">
<![CDATA[<!--]]>
	release-name=produzione_putt
	release-datetime=${TODAY}
	release-username=${user.name}
	release-os-name=${os.name}
	release-java-version=${java.version}
<![CDATA[-->]]>
	
									</echo>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
            </plugins>
            <pluginManagement>
				<plugins>
					<!--
						Plugin per far coprire il lifecycle di maven in Eclipse quando si usa il plugin ant
						Senza eclipse non si ha nessun impatto
					 -->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>org.apache.maven.plugins</groupId>
											<artifactId>maven-antrun-plugin</artifactId>
											<versionRange>[1.8,)</versionRange>
											<goals>
												<goal>run</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<execute />
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
         </build>
      </profile>

   </profiles>
</project>
