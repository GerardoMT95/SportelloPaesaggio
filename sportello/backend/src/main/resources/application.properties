#APPLICATION-NAME (stessa anche nel profilemanager)
spring.application.name=PAE_PRES_IST
profilemanager.codiceapplicazione=PAE_PRES_IST
configuration.application.name=pae_pres_ist
rubrica.riferimento.applicazione=AUTPAE
#e' un codice che associamo all'applicazione ISTRUTTORIA anche se è la stessa di PAE_PRES_IST
codice.applicazione.istruttoria=PAE_ISTRUTTORIA


#SERVER
server.port=${server.port.value}
server.contextPath=/paesaggio-presentazione-istanza
servlet.path=/*
spring.flyway.enabled=false

#ACTUATOR
endpoints.enabled=false
endpoints.health.enabled=false

log.elasticsearch=${log.elasticsearch.value}
log.elasticsearch.url=${log.elasticsearch.url.value}

wso2.client.id=${wso2.client.id.value}
wso2.secret.id=${wso2.secret.id.value}
wso2.username.batchusr=${wso2.username.batchusr.value}
wso2.password.batchpwd=${wso2.password.batchpwd.value}

#Conflitto di librerie si usa altra strada rispetto a common starter
######cache.enable=true

host.profile=${host.profile.value}
host.profilemanager=${host.profilemanager.value}
host.ireport=${host.ireport.value}
host.cms=${host.cms.value}
cms.url.upload=${host.cms.value}/cms/uploadStream.pjson
cms.url.download=${host.cms.value}/cms/downloadStream.pjson
cms.url.delete=${host.cms.value}/cms/delete.pjson
cms.url.deletepath=${host.cms.value}/cms/deletePath.pjson
cms.url.getpath=${host.cms.value}/cms/getPathAlfresco.pjson
host.mail=${host.mail.value}
host.anagrafica=${host.anagrafica.value}
host.pades=${host.pades.value}

url.mail.notifica=${host.mail}/send/mailStream.pjson
url.mail.notifica.destinatari=${url.mail.notifica.destinatari.value}

path.cms=/opt/cms
path.pdf=/opt/pdf
#Per sviluppo non commitare valorizzate
path.cms.developer=
path.pdf.developer=

swagger.enable=${swagger.enable.value}

connection.timeout=60
read.timeout=600

spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=100MB
spring.http.multipart.max-file-size=50MB
spring.http.multipart.max-request-size=100MB

microservice.pm.url.value=${pm.url.value}

#configurazioni privacy manager e richiesta abilitazione manager
privacy.host=${privacy.host.value}
privacy.applicazione=PAE_PRES_IST
pm.codice.applicazione=${profilemanager.codiceapplicazione}
abilitazione.richiesta.host=${abilitazione.richiesta.host.value}

#parametri filtro file shape GIS ZONA PUGLIA
shape.filtering.enable=true
shape.filtering.bbox.xmin=493000
shape.filtering.bbox.xmax=800000
shape.filtering.bbox.ymin=4400000
shape.filtering.bbox.ymax=4700000

#configurazione layer editing (nome layer=nomeapplicazioneEditing o nomeapplicazionePublished  id=0 sempre)
geo.layer.editing.description=Edit layer istanze paesagg. ai sensi del PPTR 
geo.layer.editing.descrizioneEstesa=Layer editing istanze telematiche di Autorizzazioni e Accertamenti di comp. paesaggistica ai sensi del PPTR 
#es. 255,102,102,180 (r,g,b,alfa_in_255_esimi)
geo.layer.editing.coloreArea=255,102,102,180
geo.layer.publishing.description=Istanze telematiche di Aut. e Acc. di comp. paesagg. rilasciati ai sensi del PPTR trasmesse 
geo.layer.publishing.descrizioneEstesa=Aree relative ad Istanze telematiche Autorizzazioni ed Accertamenti di compatibilità paesaggistica ai sensi del PPTR
geo.layer.publishing.coloreArea=255,102,102,180

protocol.object=%s - AUTORIZZAZIONI PAESAGGISTICHE
client.protocollo.endpoint=${client.protocollo.endpoint.value}
client.protocollo.administration=${client.protocollo.administration.value}
client.protocollo.aoo=${client.protocollo.aoo.value}
client.protocollo.register=${client.protocollo.register.value}
client.protocollo.user=${client.protocollo.user.value}
client.protocollo.password=${client.protocollo.password.value}
client.protocollo.hash.algorithm=${client.protocollo.hash.algorithm.value}
client.protocollo.indirizzopostale=${client.protocollo.indirizzopostale.value}
client.protocollo.indirizzotelematico=${client.protocollo.indirizzotelematico.value}
client.protocollo.tipoindirizzotelematico=${client.protocollo.tipoindirizzotelematico.value}
client.protocollo.aoo.denominazione=${client.protocollo.aoo.denominazione.value}
client.protocollo.denominazione=${client.protocollo.denominazione.value}
client.protocollo.data_registrazione=${client.protocollo.data_registrazione.value}
client.protocollo.numero_registrazione=${client.protocollo.numero_registrazione.value}

#invio email
mittente.email=
#impostazioni email
email.mittente=posta-certificata@pec.rupar.puglia.it

# configurazione feign webmail
microservice.webmail.url = ${microservice.webmail.url.value}

# configurazione kafka
microservice.kafka.url = ${microservice.kafka.url.value}

# nome del json di configurazione della casella postale default dell'applicazione, se l'ente in questione non ha la sua...
# si trova in resources/configCasellaPostale
casella.postale.config.webmail = ${casella.postale.config.webmail.value}

#EMAIL SETTINGS
#registration
#email.registration.sender=${email.registration.sender.value}

abilita.scheduling=${abilita.scheduling.value}

abilita.ricezionemail=${abilita.ricezionemail.value}

mail.key=${mail.key.value}

allegatoemail.url=${allegatoemail.url}
mypay.serviceurl=${mypay.serviceurl.value}
cms.path.base=${cms.path.base.value}

protocollo.host=${protocollo.host.value}

urlRedirect.mypay=${urlRedirect.mypay.value}

prefix.oggetto.comunicazione=Fascicolo {CODICE_FASCICOLO}

cron.expression=${cron.expression.value}


url.imprese=${host.imprese}/registro-imprese-be/consultazione-impresa-batch
host.imprese=${host.imprese.value}
wso2.username.batchusr.imprese=${wso2.username.batchusr.imprese.value}
wso2.password.batchpwd.imprese=${wso2.password.batchpwd.imprese.value}

#REPORT
report.download=${report.download.value}
report.path=${report.path.value}
jasper.path=${jasper.path.value}

url.pec=${host.mail}/send/pecSyncStream.pjson
url.pades.checkOriginalAndSigned=${host.pades}/public/pades/checkOriginalAndSigned

#cds
wso2.username.cdsusr=${wso2.username.cdsusr.value}
wso2.password.cdspwd=${wso2.password.cdspwd.value}
cds.host=${cds.host.value}


autpae.host=${autpae.host.value}


